package test.java.com.MusicGroup.pagehelper;

import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.testng.Assert;
import test.java.com.MusicGroup.locators.LocatorReader;
import test.java.com.MusicGroup.util.DriverHelper;

public class VerifyB2B_UploadProductList_Helper extends DriverHelper {
	private LocatorReader locatorReader;

	public VerifyB2B_UploadProductList_Helper(WebDriver driver) {
		super(driver);
		locatorReader = new LocatorReader("VerifyB2B_UploadProductList.xml");
	}

	public void VerifyB2BLoginPage(String B2BUser, String password,String ExpectedResult) throws InterruptedException {
		// Verify Logo On Login Page
		try {
			String Locator = locatorReader
					.getLocator("LoginPage.VerifyLogoOnLogin");
			this.WaitForElementVisible(Locator, 10);
			Boolean Result = this.isElementPresent(Locator);
			System.out.println("Result is" + Result);
			String ActualResult = Result.toString();
			Assert.assertEquals(ExpectedResult, ActualResult);
		} catch (Exception e) {
			System.out.println("Product logo not found");
		}

		// Verify MusicID SignIn Text on Login Page
		try {
			String Locator = locatorReader
					.getLocator("LoginPage.VerifySignInHeading");
			this.WaitForElementVisible(Locator, 10);
			Boolean Result = this.isElementPresent(Locator);
			System.out.println("Result is" + Result);
			String ActualResult = Result.toString();
			Assert.assertEquals(ExpectedResult, ActualResult);
		} catch (Exception e) {
			System.out.println("Product logo not found");

		}
		try {
			String Locator = locatorReader
					.getLocator("LoginPage.VerifyMusicGroupID");
			this.WaitForElementVisible(Locator, 10);
			Boolean Result = this.isElementPresent(Locator);
			System.out.println("Result is" + Result);
			String ActualResult = Result.toString();
			Assert.assertEquals(ExpectedResult, ActualResult);
			String UserID = "allprod@music-group.com";
			this.sendKeys(Locator, UserID);

		} catch (Exception e) {
			System.out.println("Product logo not found");

		}
		try {
			String Locator = locatorReader
					.getLocator("LoginPage.VerifyMusicGroupPassword");
			this.WaitForElementVisible(Locator, 10);
			Boolean Result = this.isElementPresent(Locator);
			System.out.println("Result is" + Result);
			String ActualResult = Result.toString();
			Assert.assertEquals(ExpectedResult, ActualResult);
			String Password = "Welcome123";
			this.sendKeys(Locator, Password);
		} catch (Exception e) {
			System.out.println("Product logo not found");

		}
		try {
			String Locator = locatorReader
					.getLocator("LoginPage.VerifyLogInButton");
			this.WaitForElementVisible(Locator, 10);
			Boolean Result = this.isElementPresent(Locator);
			System.out.println("Result is" + Result);
			String ActualResult = Result.toString();
			Assert.assertEquals(ExpectedResult, ActualResult);
			this.clickOn(Locator);
		} catch (Exception e) {
			System.out.println("Product logo not found");

		}
		// Click On User
		try {

			String Locator = locatorReader
					.getLocator("LoginPage.VerifyLoggedUser");
			this.WaitForElementVisible(Locator, 10);

			Boolean Result = this.isElementPresent(Locator);
			System.out.println("Result is" + Result);
			String ActualResult = Result.toString();
			Assert.assertEquals(ExpectedResult, ActualResult);
			clickOn(Locator);
		} catch (Exception e) {
			System.out.println("Product logo not found");

		}
		// Click On Download List

		try {

			String Locator = locatorReader
					.getLocator("LoginPage.ClickOnUploadList");
			this.WaitForElementVisible(Locator, 10);

			Boolean Result = this.isElementPresent(Locator);
			System.out.println("Result is" + Result);
			String ActualResult = Result.toString();
			Assert.assertEquals(ExpectedResult, ActualResult);
			clickOn(Locator);
		} catch (Exception e) {
			System.out.println("Product logo not found");

		}
		// Verify UploadCart
		try {

			String Locator = locatorReader
					.getLocator("LoginPage.VerifyUploadCart");
			WaitForElementVisible(Locator, 10);

			Boolean Result = this.isElementPresent(Locator);
			System.out.println("Result is" + Result);
			String ActualResult = Result.toString();
			Assert.assertEquals(ExpectedResult, ActualResult);

		} catch (Exception e) {
			System.out.println("Product logo not found");

		}

		// click on Choose file
		String Root_Path = System.getProperty("user.dir");
		String Path = Root_Path + "\\product-list.csv";
		System.out.println("Path" + Path);
		JavascriptExecutor js = (JavascriptExecutor) driver;
		js.executeScript("document.getElementById('cartFile').style.display = 'block';");
		driver.findElement(ByLocator("cartFile")).sendKeys(Path);
		js.executeScript("document.getElementById('cartFile').style.display = 'none';");
		Assert.assertTrue(isElementPresent("//span[contains(.,'product-list.csv')]"));
		System.out.println("File is selected");
		Thread.sleep(2000);

		// Click on Upload Button
		System.out.println("Clicking on upload btn");
		WebElement element = driver.findElement(ByLocator("//button[@value='Upload']"));
		((JavascriptExecutor) driver).executeScript("arguments[0].click();",element);
		Thread.sleep(3000);

		// Click on Create Button
		System.out.println("Click on Create button");
		String Locator1 = locatorReader.getLocator("LoginPage.ClickOnCreateButton");
		WaitForElementVisible(Locator1, 10);
		if (!driver.findElement(ByLocator(Locator1)).isDisplayed()) {
			Assert.fail("Create button is not present");
		}
		clickOn(Locator1);

		// Click On Replace Button if present
		System.out.println("Click on Replace button if present");
		String Locator3 = locatorReader.getLocator("LoginPage.ClickOnReplaceButton");
		if (driver.findElement(ByLocator(Locator3)).isDisplayed()) {
			clickOn(Locator3);
			Thread.sleep(3000);
		}

		// Verify Checkout Button
		try {
			System.out.println("Click on Checkout button");
			String Locator = locatorReader.getLocator("LoginPage.VerifyCheckOutButton");
			WaitForElementVisible(Locator, 10);
			Boolean Result = this.isElementPresent(Locator);
			System.out.println("Result is" + Result);
			String ActualResult = Result.toString();
			Assert.assertEquals(ExpectedResult, ActualResult);

		} catch (Exception e) {
			System.out.println("Failed to find checkout button");

		}
	}

	public void VerifyCheckout(String B2BUser, String password,String ExpectedResult)throws InterruptedException
	{
		VerifyB2BLoginPage(B2BUser, password, ExpectedResult);

	}
}
